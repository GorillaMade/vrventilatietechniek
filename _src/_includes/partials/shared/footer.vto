<footer class="[ site-footer ] [] [ region ]">
    <div class="wrapper flex-group flex-group--between">
        <span>&copy; Copyright 2025 {{ site.name }} - kvk {{ site.kvk_nummer }}</span>
        <div class="cluster">
            <a href="/algemene-voorwaarden">Algemene voorwaarden</a>
        </div>
    </div>
</footer>

<!-- Scripts -->
<script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
<script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const navLinks = document.querySelectorAll(".site-nav ul li a[href^='#']");
  const sections = [];

  navLinks.forEach(link => {
    const target = document.querySelector(link.getAttribute("href"));
    if (target) sections.push(target);
  });

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      const id = entry.target.getAttribute("id");
      const navLink = document.querySelector(`.site-nav ul li a[href="#${id}"]`);
      if (!navLink) return;

      if (entry.isIntersecting) {
        navLinks.forEach(link => link.removeAttribute("aria-current"));
        navLink.setAttribute("aria-current", "page");
      }
    });
  }, {
    root: null,
    rootMargin: "0px 0px -50% 0px", // actieve sectie zodra hij 50% in beeld is
    threshold: 0
  });

  sections.forEach(section => observer.observe(section));
});
</script>


<script>
document.querySelectorAll('.button--link[data-dialog]').forEach(btn => {
    btn.addEventListener('click', () => {
        const dialogId = btn.dataset.dialog;
        const dialog = document.getElementById(dialogId);
        if (typeof dialog.showModal === "function") {
            dialog.showModal();
        } else {
            alert("Uw browser ondersteunt geen dialog-element");
        }
    });
});
</script>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        if (window.matchMedia("(prefers-reduced-motion: reduce)").matches) return;

        const track = document.querySelector(".marquee__track");

        // Clone voor naadloze loop
        track.innerHTML += track.innerHTML;

        let x = 0;
        const speed = 50; // pixels per seconde
        let lastTimestamp = null;

        function animate(timestamp) {
            if (!lastTimestamp) lastTimestamp = timestamp;
            const delta = (timestamp - lastTimestamp) / 1000; // seconden sinds vorig frame
            lastTimestamp = timestamp;

            x -= speed * delta; // beweging gebaseerd op echte tijd

            // reset na 1 set
            const halfWidth = track.scrollWidth / 2;
            if (x <= -halfWidth) x = 0;

            track.style.transform = `translateX(${x}px)`;
            requestAnimationFrame(animate);
        }

        requestAnimationFrame(animate);
    });
</script>

<script>
document.querySelectorAll(".ba-slider").forEach(slider => {
  const handle = slider.querySelector(".handle");
  const before = slider.querySelector(".before");

  function moveSlider(x) {
    const rect = slider.getBoundingClientRect();
    let position = x - rect.left;
    if (position < 0) position = 0;
    if (position > rect.width) position = rect.width;

    // percentage van slider
    const pct = (position / rect.width) * 100;

    // clip-path aanpassen zodat before image zichtbaar wordt tot slider positie
    before.style.clipPath = `inset(0 ${100 - pct}% 0 0)`;
    handle.style.left = position + "px";
  }

  // Desktop
  handle.addEventListener("mousedown", e => {
    e.preventDefault();
    const move = ev => moveSlider(ev.pageX);
    const stop = () => {
      window.removeEventListener("mousemove", move);
      window.removeEventListener("mouseup", stop);
    };
    window.addEventListener("mousemove", move);
    window.addEventListener("mouseup", stop);
  });

  // Mobiel
  handle.addEventListener("touchstart", e => {
    const move = ev => moveSlider(ev.touches[0].pageX);
    const stop = () => {
      window.removeEventListener("touchmove", move);
      window.removeEventListener("touchend", stop);
    };
    window.addEventListener("touchmove", move, { passive: false });
    window.addEventListener("touchend", stop);
  });
});

</script>